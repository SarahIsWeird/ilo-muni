---
import { makeAugust } from "@utils/other";

export interface EpochPickerConfig {
  startYear: number;
  endYear: number;
  renderAs: "date" | "age";
  // TODO: age is wrong if you specify a different range
  valueYear: number;
  id: string;
}

const { startYear, endYear, valueYear, renderAs, id } = Astro.props;
const dates = Array.from({ length: endYear - startYear + 1 }, (_, i) =>
  makeAugust(startYear + i),
);

const valueDate = makeAugust(valueYear);
---

<select id={id}>
  {
    dates.map((date, index) => (
      <option
        value={date.getTime() / 1000}
        selected={date.getTime() === valueDate.getTime()}
      >
        {renderAs === "date"
          ? `Aug ${date.getUTCFullYear()}`
          : `${index} years old`}
      </option>
    ))
  }
</select>
